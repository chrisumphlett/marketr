library(devtools)
document()
check()
check_win_devel()
check_win_devel()
check_win_devel()
spell_check()
check_rhub()
check_rhub()
check_win_devel()
library(tidyverse)
library(lubridate)
devtools::install_github("chrisumphlett/marketr")
qry <- "select * from dev.qualtrics.survey_metadata"
dat <- query_sql_server(db_server = ".", db_name = "DEV", query_text = qry)
# tech support survey = SV_bCx677Snmf98r3K
qry <- "select * from dev.qualtrics.SV_bCx677Snmf98r3K"
dat <- query_sql_server(db_server = ".", db_name = "DEV", query_text = qry)
# use metadata to identify nps question
qry_qmd <- "select * from dev.qualtrics.question_metadata"
qmd <- query_sql_server(db_server = ".", db_name = "DEV", query_text = qry_qmd)
dat2 <- dat %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(substr(question_name, 1, 1) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd) %>%
filter(response_type %in% c("NPS", "DL")) %>%
select(response, response_id, question_name, survey_id) %>%
pivot_wider(names_from = question_name, values_from = response)
nps <- dat2 %>%
mutate(nps_question = as.numeric(Q26)) %>%
filter(!is.na(nps_question))
# function that can be called to write a table to sql
devtools::source_url("https://github.com/chrisumphlett/shared_r_code/blob/master/SQL_SERVER.R?raw=TRUE")
library(marketr)
qry <- "select * from dev.qualtrics.survey_metadata"
dat <- query_sql_server(db_server = ".", db_name = "DEV", query_text = qry)
# tech support survey = SV_bCx677Snmf98r3K
qry <- "select * from dev.qualtrics.SV_bCx677Snmf98r3K"
dat <- query_sql_server(db_server = ".", db_name = "DEV", query_text = qry)
# use metadata to identify nps question
qry_qmd <- "select * from dev.qualtrics.question_metadata"
qmd <- query_sql_server(db_server = ".", db_name = "DEV", query_text = qry_qmd)
dat2 <- dat %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(substr(question_name, 1, 1) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd) %>%
filter(response_type %in% c("NPS", "DL")) %>%
select(response, response_id, question_name, survey_id) %>%
pivot_wider(names_from = question_name, values_from = response)
nps <- dat2 %>%
mutate(nps_question = as.numeric(Q26)) %>%
filter(!is.na(nps_question))
dat2 <- dat %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(substr(question_name, 1, 1) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd)
dat2 <- dat %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id)
dat2 <- dat %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(toupper(substr(question_name, 1, 1)) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd) %>%
filter(response_type %in% c("NPS", "DL")) %>%
select(response, response_id, question_name, survey_id) %>%
pivot_wider(names_from = question_name, values_from = response)
nps <- dat2 %>%
mutate(nps_question = as.numeric(Q26)) %>%
filter(!is.na(nps_question))
dat2 <- dat %>%
filter(row_number() < 1000)
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(toupper(substr(question_name, 1, 1)) == "Q")
dat2 <- dat %>%
filter(row_number() < 1000) %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(toupper(substr(question_name, 1, 1)) == "Q")
dat2 <- dat %>%
filter(row_number() < 1000) %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(toupper(substr(question_name, 1, 1)) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd) %>%
filter(response_type %in% c("NPS", "DL"))
dat2 <- dat %>%
filter(row_number() < 1000) %>%
mutate(question_name = word(question_id, sep = fixed("_"))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(toupper(substr(question_name, 1, 1)) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd)
dat2 <- dat %>%
filter(row_number() < 1000) %>%
mutate(question_name = toupper(word(question_id, sep = fixed("_")))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(substr(question_name, 1, 1) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd) %>%
filter(response_type %in% c("NPS", "DL")) %>%
select(response, response_id, question_name, survey_id) %>%
pivot_wider(names_from = question_name, values_from = response)
dat2 <- dat %>%
mutate(question_name = toupper(word(question_id, sep = fixed("_")))) %>%
select(question_name, response, response_id, survey_id) %>%
filter(substr(question_name, 1, 1) == "Q") %>% # get rid of the Display order records (eg, "DO-Q-Q34")
left_join(qmd) %>%
filter(response_type %in% c("NPS", "DL")) %>%
select(response, response_id, question_name, survey_id) %>%
pivot_wider(names_from = question_name, values_from = response)
nps <- dat2 %>%
mutate(nps_question = as.numeric(Q26)) %>%
filter(!is.na(nps_question))
# testing NPS functions
nps_calc(nps, Q5)
# add date
qry <- "select * from dev.qualtrics.response_metadata"
rmd <- query_sql_server(db_server = ".", db_name = "DEV", query_text = qry) %>%
select(response_id, survey_id, startdate)
nps_t <- nps %>%
left_join(rmd) %>%
mutate(survey_date = as.Date(startdate),
survey_month = floor_date(survey_date, "month")) %>%
filter(year(survey_month) %in% c(2018, 2019))
agent_months <- nps_t %>%
select(Q5, survey_month) %>%
distinct() %>%
group_by(Q5) %>%
summarise(nn = n()) %>%
ungroup()
nps_t2 <- nps_t %>%
left_join(agent_months) %>%
filter(nn >= 12)
nps_t3 <- nps_trend(nps_t2, survey_month, Q5, min_survey = 9)
ggplot(nps_t3, aes(x = survey_month, y = nps)) +
facet_wrap(Q5 ~ ., ncol = 3) +
geom_line() +
theme_bw() +
labs(title = "Monthly NPS by tech support agent, 2018-2019",
subtitle = "Agents who had surveys in at least 12 months and averaged at least 5 surveys in those months",
y = "NPS",
x = "") +
scale_x_date(labels = scales::date_format("%b-%y")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# testing NPS functions
cxi_calc(nps, Q5)
devtools::release()
